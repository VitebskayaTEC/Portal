@model News

@{
	Dictionary<string, string> NewsTags = ViewBag.NewsTags;

	var links = (Model.Links ?? "").Split(new string[] { ";" }, StringSplitOptions.RemoveEmptyEntries);
	bool isShort = string.IsNullOrEmpty(Model.Message) && string.IsNullOrEmpty(Model.Title) && links.Length == 1;
	bool isPriority = Model.Priority != "low";
	bool isWatched = Model.IsWatched;
	bool isNew = !isWatched && (isPriority) && (DateTime.Now - Model.DateAdd.Date).TotalDays <= 7;
	bool isTemp = Model.DateAdd.Date < Model.DateExpire.Date;
	int daysRemains = (Model.DateExpire.Date - DateTime.Now.Date).Days;
}

<div
	class="block @(isWatched ? "" : "news-unwatched") @(isNew ? "news-new" : "")"
	news-id="@Model.Id"
>
	<div class="news-info">
		<div style="font-size: .8em;">
			<span class="news-date">@Model.DateAdd.ToString("d MMMM yyyy")</span>
			@if (isPriority)
			{
				<span class="tag highlight" title="Новость обозначена как важная">
					<i icon>priority_high</i>
					Важно
				</span>
			}
			@if (Model.Guild?.Id != 0)
			{
				if (Model.Guild.IsPrivate)
				{
					<span class="tag" title="Новость видна только подписчикам канала">
						<i icon>lock</i>
						@Model.Guild.Name
					</span>
				}
				else
				{
					<span class="tag" title="Новость относится к общедоступному каналу">
						<i icon>sell</i>
						@Model.Guild.Name
					</span>
				}
			}
			@if (isTemp)
			{
				<span class="tag" title="Новость является временной и будет скрыта по истечению указанного времени">
					<i icon>timer</i>
					@if (daysRemains == 0)
					{
						@: Истекает: сегодня
					}
					else if (Model.DateExpire.Date < DateTime.Now.Date)
					{
						@: Истекла: @(0 - daysRemains) дн. назад
					}
					else
					{
						@: @daysRemains дн.
					}
				</span>
			}
			@if (!string.IsNullOrEmpty(Model.Tags))
			{
				var tags = Model.Tags.Split('|');
				foreach (var tag in tags)
				{
					if (NewsTags.TryGetValue(tag, out string tagName))
					{
						<small class="tag">@tagName</small>
					}
				}
			}
		</div>
		<div class="news-buttons">
			@if (Model.IsRedactor)
			{
				<i icon title="Перейти к редактированию новости" onclick="document.location='@Url.Action("edit", "news", new { Id = Model.Id })'">edit</i>
			}
			@if (Model.IsPinned)
			{
				<i icon title="Открепить новость" onclick="unpinNews(@Model.Id)">push_pin</i>
			}
			else
			{
				<i icon title="Закрепить новость в начале списка новостей" onclick="pinNews(@Model.Id)">add_circle_outline</i>
			}
			@if (Model.IsHide)
			{
				<i icon title="Новость была скрыта. Нажмите, чтобы это отменить." onclick="showNews(@(Model.Id))">visibility</i>
			}
			else
			{
				<i icon title="Скрыть новость. В дальнейшем она не будет отображаться в списке." onclick="hideNews(this, @(Model.Id))">visibility_off</i>
			}
		</div>
	</div>
	<div class="news-caption">
		@if (isShort)
		{
			<a href="http://www.vst.vitebsk.energo.net/files/Новости/@Model.Id/@links[0]">@links[0].Substring(0, links[0].IndexOf("."))</a>
		}
		else
		{
			if (Model.Title != "")
			{
				@Model.Title
			}
			else
			{
				<i>Без названия</i>
			}
		}
	</div>

	<div class="news-body">
		@if (isNew)
		{
			@Html.Partial("NewsContent", Model)
		}
		else
		{
			<small class="news-preview" title="Нажмите, чтобы увидеть текст новости">посмотреть</small>
		}
	</div>
</div>