@model int
@{
	ViewBag.Title = "Редактирование";
	Layout = "~/Areas/Accidents/Views/Shared/_Layout.cshtml";
}

@using (var db = new SiteContext())
{
	var user = db.Authorize(User);

	var canCreateRecords = db.AccidentsUsersLists
	   .Where(x => x.UserId == user.UID && x.Role == AccidentListRoles.Writer)
	   .Count() > 0;

	if (!canCreateRecords)
	{
		<div>Доступ запрещён</div>
		return;
	}

	var record = db.AccidentsRecords
		.FirstOrDefault(x => x.Id == Model);

	if (record == null)
	{
		<div>Сообщение не найдено</div>
		return;
	}
	else
	{
		ViewBag.Title = "Редактирование #" + record.Id;
	}

	if (record.IsDeleted)
	{
		<div>Сообщение удалено</div>
		return;
	}

	var canChangeContent = record.UserId == user.UID;

	var relatedLists = (from recordList in db.AccidentsRecordsLists.Where(x => x.RecordId == record.Id)
						from listUser in db.AccidentsUsersLists.LeftJoin(x => x.ListId == recordList.ListId && x.UserId == user.UID)
						select listUser.ListId).ToList();

	var userLists = db.AccidentsUsersLists
		.Where(x => x.UserId == user.UID && x.Role >= AccidentListRoles.Writer)
		.Select(x => x.ListId)
		.ToList();

	var lists = db.AccidentsLists
		.Where(x => relatedLists.Concat(userLists).Contains(x.Id))
		.ToList();

	<div class="header">
		<span>
			Редактирование сообщения №@record.Id <b>@record.Description</b> от <b>@record.Date.ToString("d MMMM yyyy")</b>
		</span>
		<span>Не забудьте указать, через какие списки должно распространяться сообщение, иначе оно не будет отображаться</span>
		<a href="@Url.Action("details", "records", new { Id = record.Id })">Перейти к просмотру сообщения</a>
		<a href="@Url.Action("", "records")">Перейти к списку сообщений</a>
	</div>

	var author = db.Users
		.FirstOrDefault(x => x.UID == record.UserId);

	<div class="container details form">
		<div>
			<span>Добавлено @record.DateCreated.ToString("d MMMM yyyy") пользователем @(author?.DisplayName ?? "неизв.")</span>
		</div>
		<div>
			<b>Дата информационного сообщения</b>
			@if (canChangeContent)
			{
				<input type="date" name="Date" value="@record.Date.ToString("yyyy-MM-dd")" />
			}
			else 
			{ 
				<span>@record.Date.ToString("d MMMM yyyy")</span>
			}
		</div>
		<div>
			<b>Описание</b>
			@if (canChangeContent)
			{
				<textarea name="Description">@record.Description</textarea>
			}
			else
			{
				<span>@record.Description</span>
			}
		</div>
		<div>
			<b>Дата для ознакомления</b>
			@if (canChangeContent)
			{
				<span>Устанавливается на начало рабочей недели, для проработки на "Часе ТБ"</span>
				<input type="date" name="DateControl" value="@record.DateControl.ToString("yyyy-MM-dd")" />
			}
			else
			{
				<span>@record.DateControl.ToString("d MMMM yyyy")</span>
			}
		</div>

		@if (canChangeContent)
		{
			<div class="files">
				<div>Прикреплённые документы</div>
				<div id="files">
					@if (Directory.Exists(@"\\web\Files\Час ТБ\" + record.Id))
					{
						var files = Directory
							.GetFiles(@"\\web\Files\Час ТБ\" + record.Id)
							.Select(x => x.Substring(x.LastIndexOf("\\") + 1))
							.ToList();

						foreach (var file in files)
						{
							<div class="file">
								<button onclick="removeFile(this, '@file')">
									<span class="material-icons">clear</span>
									Удалить файл
								</button>
								<a target="_blank" href="http://www.vst.vitebsk.energo.net/files/Час ТБ/@record.Id/@file">@file</a>
							</div>
						}
					}
				</div>
			</div>

			<form id="form" class="files">
				<label for="file" class="file">
					<span class="material-icons">file_upload</span>
					Добавить файл
				</label>
				<input type="file" name="file" id="file" onchange="document.getElementById('uploadButton').click()" />
				<input type="submit" id="uploadButton" style="display: none" />
			</form>

			<div class="form buttons">
				<button onclick="del()">Удалить сообщение</button>
				<button onclick="save()">Сохранить сообщение</button>
			</div>
		}
		else
		{
			<div id="files" class="files">
				<b>Прикреплённые документы</b>
				@if (Directory.Exists(@"\\web\Files\Час ТБ\" + record.Id))
				{
					var files = Directory
						.GetFiles(@"\\web\Files\Час ТБ\" + record.Id)
						.Select(x => x.Substring(x.LastIndexOf("\\") + 1))
						.ToList();

					if (files.Count > 0)
					{
						foreach (var file in files)
						{
							<a target="_blank" href="http://www.vst.vitebsk.energo.net/files/Час ТБ/@Model/@file">@file</a>
						}
					}
					else
					{
						<i>нет</i>
					}
				}
				else
				{
					<i>нет</i>
				}
			</div>
		}
	</div>

	<div class="container">
		<div>
			<b>Списки, через которые распространяется сообщение</b>
		</div>
		<table class="form">
			@{
				foreach (var list in lists)
				{
					bool isChange = userLists.Contains(list.Id);
					bool isSelected = relatedLists.Contains(list.Id);

					<tr>
						<td>@list.Name</td>
						<td style="width: 20em;">
							@if (isChange)
							{
								<select onchange="setRecordToList(@list.Id)">
									<option value="0">Не используется</option>
									<option value="1" @(isSelected ? "selected": "")>Используется</option>
								</select>
							}
							else
							{
								@list.Name
							}
						</td>
					</tr>
				}
			}
		</table>
	</div>

	if (canChangeContent)
	{
		<script>
			function save() {
				var form = new FormData()

				document.querySelectorAll('input,select,textarea').forEach(el => {
					form.append(el.name, el.type == 'checkbox' ? el.checked : el.value)
				})

				fetch('@Url.Action("edit", "records", new { Id = record.Id })', { method: 'POST', body: form })
					.then(res => res.json())
					.then(json => {
						if (json.Done) {
							alert('Сообщение сохранено')
							location = '@Url.Action("details", "records", new { Id = record.Id })'
						}
						else {
							alert(json.Error)
							console.error(json)
						}
					})
			}

			function del() {
				if (!confirm('Вы уверены, что хотите удалить сообщение?')) return
				fetch('@Url.Action("delete", "records", new { Id = record.Id })', { method: 'POST' })
					.then(res => res.json())
					.then(json => {
						if (json.Done) {
							alert('Сообщение удалено')
							location = '@Url.Action("", "records")'
						}
						else {
							alert(json.Error)
							console.error(json)
						}
					})
			}

			form.onsubmit = function (e) {
				e.preventDefault()

				fetch('@Url.Action("upload", "records", new { Id = record.Id })', { method: 'POST', body: new FormData(form) })
					.then(res => res.json())
					.then(json => {
						if (json.Done) {
							document.getElementById('files').insertAdjacentHTML('beforeend',
								`<div class="file">
									<button onclick="removeFile(this, '${json.Done}')">
										<span class="material-icons">clear</span>
										Удалить файл
									</button>
									<a href="http://www.vst.vitebsk.energo.net/files/Час ТБ/@record.Id/${json.Done}">${json.Done}</a>
								</div>`)
						}
						else {
							alert(json.Error)
							console.error(json)
						}
					})
			}

			function removeFile(button, name) {
				var form = new FormData()
				form.append('Name', name)

				fetch('@Url.Action("remove", "records", new { Id = record.Id })', { method: 'POST', body: form })
					.then(res => res.json())
					.then(json => {
						if (json.Done) {
							var div = button.parentNode
							div.parentNode.removeChild(div)
						}
						else {
							alert(json.Error)
							console.error(json)
						}
					})
			}
		</script>
	}
	<script>
		function setRecordToList(listId) {
			var form = new FormData()
			form.append('ListId', listId)

			fetch('@Url.Action("SetRecordToList", "records", new { Id = record.Id })', { method: 'POST', body: form })
				.then(res => res.json())
				.then(json => {
					if (json.Done) {
						//
					}
					else {
						alert(json.Error)
						console.error(json)
					}
				})
		}
	</script>
}