@{
	ViewBag.Title = "Час ТБ";
	Layout = "~/Areas/Accidents/Views/Shared/_Layout.cshtml";
}

@using (var db = new SiteContext())
{
	var user = db.Authorize(User);

	var query = from record in db.AccidentsRecords
				from recordList in db.AccidentsRecordsLists.LeftJoin(x => x.RecordId == record.Id)
				from list in db.AccidentsLists.LeftJoin(x => x.Id == recordList.ListId)
				from listUser in db.AccidentsUsersLists.LeftJoin(x => x.ListId == list.Id)
				from view in db.AccidentsViews.LeftJoin(x => x.AccidentId == record.Id && x.UserId == user.UID)
				where listUser.UserId == user.UID && !record.IsTemplate && !record.IsDeleted
				orderby record.DateControl descending, list.Name
				select new
				{
					Record = new { record.Id, record.DateControl, record.Description },
					List = new { list.Id, list.Name },
					ListUser = new { listUser.Role },
					View = view != null ? new { view.Date } : null
				};

	var records = query
		.ToList()
		.GroupBy(x => x.Record)
		.Select(g => new
		{
			Record = g.Key,
			Monday = g.Key.DateControl.AddDays(g.Key.DateControl.DayOfWeek == DayOfWeek.Monday 
				? 0 
				: g.Key.DateControl.DayOfWeek > DayOfWeek.Monday 
					? (-1 * ((int)g.Key.DateControl.DayOfWeek - 1)) 
					: -6),
			View = g.Select(x => x.View).FirstOrDefault(),
			Lists = g.Select(x => new
			{
				x.List.Name,
				x.ListUser.Role
			}).ToList()
		})
		.ToList()
		.GroupBy(x => x.Monday)
		.Select(g => new
		{
			Week = g.Key,
			Records = g.ToList(),
		})
		.ToList();

	var canCreateRecords = db.AccidentsUsersLists
		.Where(x => x.UserId == user.UID && x.Role == AccidentListRoles.Writer)
		.Count() > 0;

	<div class="header">
		<span>Сообщения, доступные вам по спискам рассылки, сгруппированные понедельно</span>
		<a href="@Url.Action("lists", "records")">Перейти к перечню списков рассылки</a>
		@if (canCreateRecords)
		{
			<a href="@Url.Action("add", "records")">Добавить новое сообщение</a>
		}
	</div>

	var weeks = new List<DateTime>();
	var date = records.Select(x => x.Week)?.Max() ?? DateTime.Today;

	while (date > DateTime.Parse("01.01.2021"))
	{
		var day = (int)date.DayOfWeek;
		var monday = date.AddDays(day == 1 ? 0 : day > 1 ? (-1 * (day - 1)) : -6);
		weeks.Add(monday);
		date = date.AddDays(-7);
	}

	<div class="view" style="display: table;">
		<div class="tr">
			<div class="th">Описание</div>
			<div class="th c" style="width: 12em;">Список</div>
			<div class="th c" style="width: 12em;">Просмотрено</div>
		</div>
		@foreach (var week in weeks)
		{
			<div class="caption">
				<div>@week.ToString("d MMMM yyyy") <small>@week.ToString("dd.MM") - @week.AddDays(6).ToString("dd.MM")</small></div>
				<div></div>
				<div></div>
			</div>

			var weekRecords = records.Where(x => x.Week == week).FirstOrDefault()?.Records;
			if (weekRecords == null)
			{
				<div class="tr text">
					<div class="td">нет сообщений</div>
					<div class="td"></div>
					<div class="td"></div>
				</div>
			}
			else
			{
				foreach (var record in weekRecords)
				{
					<a class="tr" href="@Url.Action("details", "records", new { Id = record.Record.Id })">
						<div class="td">
							@record.Record.Description
						</div>
						<div class="td">
							@foreach (var list in record.Lists)
							{
								if (list.Role >= AccidentListRoles.Writer)
								{
									<span>@list.Name</span>
								}
								else
								{
									<span>@list.Name</span>
								}
							}
						</div>
						<div class="td c">
							@if (record.View == null)
							{
								<span class="bad">Не просмотрено</span>
							}
							else
							{
								<span class="good">@record.View.Date.ToString("dd.MM.yyyy")</span>
							}
						</div>
					</a>
				}
			}
		}
	</div>
}