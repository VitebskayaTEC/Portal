@{
	ViewBag.Title = "Разметка";
	Layout = "~/Views/Shared/_PageLayout.cshtml";
}

<div class="page">
	@using (var db = new SiteContext())
	{
		var user = db.Authorize(User);

		ViewBag.IsDocsAdmin = user.IsDocsAdmin;

		var allMenu = db.DocsMenu
			.ToList();

		var allPages = db.DocsPages
			.ToList();

		foreach (var menu in allMenu)
		{
			menu.Pages = allPages
				.Where(x => x.MenuId == menu.Id)
				.ToList();
		}

		var firstRankMenu = allMenu
			.Where(x => x.MenuId == 0)
			.ToList();

		foreach (var menu in firstRankMenu)
		{
			menu.LoadSubMenuFromAllList(allMenu);
		}

		<button onclick="addMenu(0)">
			<i icon>add</i>
			<span>раздел</span>
		</button>

		foreach (var menu in firstRankMenu)
		{
			@RenderMenu(menu)
		}
	}

	@helper RenderMenu(DocsMenu menu)
	{
		<div class="section">
			<div class="section-header">
				<div>
					Раздел:
					@menu.Name
				</div>
				<div>
					<button onclick="removeMenu(@menu.Id)">
						<i icon>delete</i>
						<span>удалить</span>
					</button>
					<button onclick="editMenu(@menu.Id, '@menu.Name')">
						<i icon>edit</i>
						<span>редакт.</span>
					</button>
				</div>
			</div>
			<div class="section-body">
				@foreach (var subMenu in menu.SubMenuList)
				{
					@RenderMenu(subMenu)
				}
				@foreach (var page in menu.Pages)
				{
					<div class="page-row">
						<div>
							Страница:
							<a href="~/page/@page.Id">@page.Name</a>
						</div>
						<div style="min-width: 12em; text-align: right;">
							<button onclick="removePage(@page.Id)">
								<i icon>delete</i>
								<span>удалить</span>
							</button>
							<button onclick="editPage(@page.Id, '@page.Name')">
								<i icon>edit</i>
								<span>редакт.</span>
							</button>
						</div>
					</div>
				}
				<div class="section-item">
					<button onclick="addMenu(@menu.Id)">
						<i icon>add</i>
						<span>раздел</span>
					</button>
					<button onclick="addPage(@menu.Id)">
						<i icon>add</i>
						<span>страница</span>
					</button>
				</div>
			</div>
		</div>
	}
</div>

@section scripts {
	<script>
		function addMenu(menuId) {
			let name = prompt('Введите наименование раздела')
			if (!name) return
			action('@Url.Action("Add", "Menu")', { name, menuId }, () => location.reload())
		}

		function editMenu(id, defName) {
			let name = prompt('Введите наименование раздела', defName)
			if (!name) return
			action('@Url.Action("Edit", "Menu")', { name, id }, () => location.reload())
		}

		function removeMenu(id) {
			if (!confirm('Удалить раздел?')) return
			action('@Url.Action("Remove", "Menu")', { id }, () => location.reload())
		}

		function addPage(menuId) {
			let name = prompt('Введите наименование страницы')
			if (!name) return
			action('@Url.Action("Add", "Pages")', { name, menuId }, () => location.reload())
		}

		function editPage(id, defName) {
			let name = prompt('Введите наименование страницы', defName)
			if (!name) return
			action('@Url.Action("Edit", "Pages")', { name, id }, () => location.reload())
		}

		function removePage(id) {
			if (!confirm('Удалить страницу?')) return
			action('@Url.Action("Remove", "Pages")', { id }, () => location.reload())
		}
	</script>
}